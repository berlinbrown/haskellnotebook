%%
%% Euler Number 12 in Erlang:
%% The sequence of triangle numbers is generated by adding 
%% the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. 
%% The first ten terms would be:

%% 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

%% Let us list the factors of the first seven triangle numbers:
%% What is the value of the first triangle number to have over five hundred divisors?
%%
-module(euler12).
-export([main/0]).

triangle(0) -> 0;
triangle(N) -> N + triangle(N-1).

%% Purpose: Increment the counter when 'factor' is found.
factor_loop_ct(Tri, 1) -> 1;
factor_loop_ct(Tri, N) when ((Tri rem N) == 0) -> 
    factor_loop_ct(Tri, N-1) + 1;
factor_loop_ct(Tri, N) -> factor_loop_ct(Tri, N-1).

factor_loop(Mx, N) when Mx == N -> 
    Tri = triangle(N),
    factor_loop_ct(Tri, Tri);
factor_loop(Mx, N) ->
    Tri = triangle(N),
    Ct = factor_loop_ct(Tri, Tri),
    %%io:format("Ct -->TriNum: ~p Index: ~p -- FactCount: ~p~n", [Tri, N, Ct]),
                                                % Increment forward, next val
    if  Ct > 500 -> io:format("done at 500/Tri:~p.~n", [Tri]), Ct;
		Ct > 180 -> io:format("...at 180/Tri: ~p N:~p, CT:~p.~n", [Tri, N, Ct]), 
                    factor_loop(Mx, N+1000);
        
        true     -> factor_loop(Mx, N+1000)
    end.

main() ->
    TriVals = 99999999,
    io:format("Euler12~n"),    
    Res = factor_loop(TriVals, 42000),
    io:format("Done [~p]~n", [Res]).

%% End of File
